type SpecVersion @entity {
    id: ID! #specVersion
    blockHeight: BigInt!
}

type Event @entity {
    id: ID!
    blockHeight: BigInt! @index
    event: String! @index
    module: String! @index
}

type Extrinsic @entity {
    id: ID!
    blockHeight: BigInt! @index
    call: String! @index
    isSigned: Boolean!
    module: String! @index
    success: Boolean!
}

# FungibleTransfer(ChainId, DepositNonce, ResourceId, U256, Vec<u8>)
type FungibleTransferEvent @entity {
    id: ID!

    amount: String!
    depositNonce: BigInt! @index
    destinationChainId: Int! @index
    executedAt: String!
    recipient: String!
    resourceId: String!
    signer: String
}

# ProposalSucceeded(ChainId, DepositNonce)
type ProposalSucceededEvent @entity {
    id: ID!

    depositNonce: BigInt! @index
    executedAt: String!
    originChainId: Int! @index
}
